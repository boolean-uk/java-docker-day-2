openapi: 3.0.3
info:
  title: Java Docker day 2 Exercise - Core Criteria
  description: Java Docker day 2 Exercise - Core Criteria
  version: 1.0.0

servers:
  - url: http://localhost:4000
tags:
  - name: posts
paths:
  /posts:
    post:
      tags:
        - posts
      summary: Create new post
      description: Create new post
      operationId: createPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePost'
      responses:
        '201':
          description: Created response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    get:
      tags:
        - posts
      summary: Get all posts
      description: Get all posts as list
      operationId: getAllPosts
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPosts'
  /posts/{id}:
    get:
      tags:
        - posts
      summary: Get post
      description: Get post by id
      operationId: getPostById
      parameters:
        - name: id
          in: path
          description: The ID of the post to get
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

    put:
      tags:
        - posts
      summary: Update a post
      description: Update a post by id
      operationId: updatePost
      parameters:
        - name: id
          in: path
          description: The ID of the post to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePost'
      responses:
        '201':
          description: Created response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      tags:
        - posts
      summary: Delete a post
      description: Delete a post by id
      operationId: deletePost
      parameters:
        - name: id
          in: path
          description: The ID of the post to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

components:
  schemas:
    CreatePost:
      type: object
      required: [post]
      properties:
        propertyOne:
          type: string
          example: "Hello, this is my first post"

    Post:
      type: object
      properties:
        id:
          type: integer
          example: 1
        propertyOne:
          type: string
          example: "Hello, this is my first post"
        createdAt:
          type: string
          format: DateTime
          example: 2023-03-14T11:01:56.633+00:00
        updatedAt:
          type: string
          format: DateTime
          example: 2023-03-14T11:01:56.633+00:00
    AllPosts:
      type: array
      items:
        $ref: '#/components/schemas/Post'
