openapi: 3.0.3
info:
  title: Java API Exercise - Core Criteria
  description: |-
  version: 0.2.2

servers:
  - url: http://localhost:4000
tags:
  - name: users
  - name: posts
paths:
  /users:
    post:
      tags:
        - users
      summary: Example POST route
      description: Description of an example POST route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      tags:
        - users
      summary: Example GET route
      description: Description of an example GET route
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
  /users/{id}:
    put:
      tags:
        - users
      summary: Example PUT route
      description: Description of an example PUT route
      parameters:
        - name: id
          in: path
          description: The ID of the example to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - users
      summary: Example DELETE route
      description: Description of an example DELETE route
      parameters:
        - name: id
          in: path
          description: The ID of the example to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'


  /posts:
    post:
      tags:
        - posts
      summary: Example POST route
      description: Description of an example POST route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePost'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    get:
      tags:
        - posts
      summary: Example GET route
      description: Description of an example GET route
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPosts'

  /posts/{id}:
    put:
      tags:
        - posts
      summary: Example PUT route
      description: Description of an example PUT route
      parameters:
        - name: id
          in: path
          description: The ID of the example to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePost'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      tags:
        - posts
      summary: Example DELETE route
      description: Description of an example DELETE route
      parameters:
        - name: id
          in: path
          description: The ID of the example to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'


components:
  schemas:
    CreateUser:
      type: object
      required: [name, username, email]
      properties:
        name:
          type: string
          example: "John Doe"
        username:
          type: string
          example: "JohnathanDoe"
        email:
          type: email
          format: email
          example: "example@email.value"
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "John Doe"
        username:
          type: string
          example: "JohnathanDoe"
        email:
          type: string
          example: "example@email.value"
        createdAt:
          type: string
          format: DateTime
          pattern: YYYY-MM-DDTHH:MM:SS
          example: 2023-03-14T11:01:56.633+00:00
    AllUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'

    CreatePost:
      type: object
      required: [ content ]
      properties:
        content:
          type: string
          example: "This is a post"

    Post:
      type: object
      properties:
        id:
          type: integer
          example: 1
        content:
          type: string
          example: "This is a post"
        createdAt:
          type: string
          format: DateTime
          pattern: YYYY-MM-DDTHH:MM:SS
          example: 2023-03-14T11:01:56.633+00:00
        updatedAt:
          type: string
          format: DateTime
          pattern: YYYY-MM-DDTHH:MM:SS
          example: 2023-03-14T11:01:56.633+00:00

    AllPosts:
      type: array
      items:
        $ref: '#/components/schemas/Post'
